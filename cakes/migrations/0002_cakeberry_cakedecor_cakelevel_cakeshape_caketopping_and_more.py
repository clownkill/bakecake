# Generated by Django 4.0.4 on 2022-04-27 08:34

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cakes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CakeBerry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cake_berry', models.CharField(blank=True, choices=[(None, 'Выберите ягоды'), ('blackberry', 'Ежевика'), ('raspberry', 'Малина'), ('blueberry', 'Голубика'), ('strawberry', 'Клубника')], max_length=15, verbose_name='Ягоды')),
                ('price', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Стоимость')),
            ],
        ),
        migrations.CreateModel(
            name='CakeDecor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cake_decor', models.CharField(blank=True, choices=[(None, 'Выберите декор'), ('pistachios', 'Фисташки'), ('meringue', 'Безе'), ('hazelnuts', 'Фундук'), ('pekan', 'Пекан'), ('marshmallow', 'Маршмеллоу'), ('marshmallow', 'Марципан')], max_length=15, verbose_name='Декор')),
                ('price', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Стоимость')),
            ],
        ),
        migrations.CreateModel(
            name='CakeLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)], verbose_name='Количество уровней')),
                ('price', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Стоимость')),
            ],
        ),
        migrations.CreateModel(
            name='CakeShape',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shape', models.CharField(choices=[('round', 'Круг'), ('square', 'Квадрат'), ('rectangle', 'Прямоугольник')], default='round', max_length=10, verbose_name='Форма')),
                ('price', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Стоимость')),
            ],
        ),
        migrations.CreateModel(
            name='CakeTopping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cake_topping', models.CharField(choices=[('white', 'Белый соус'), ('caramel', 'Карамельный'), ('maple', 'Кленовый'), ('blueberry', 'Черничный'), ('choco', 'Молочный шоколад'), ('strawberry', 'Клубничный')], max_length=15, verbose_name='Топпинг')),
                ('price', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Стоимость')),
            ],
        ),
        migrations.CreateModel(
            name='Cake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inscription', models.CharField(blank=True, max_length=200, verbose_name='Надпись на торте')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Базовая стоимость')),
                ('berry', models.ManyToManyField(related_name='berries', to='cakes.cakeberry', verbose_name='Ягоды')),
                ('decor', models.ManyToManyField(related_name='decors', to='cakes.cakedecor', verbose_name='Декор')),
                ('level_count', models.ManyToManyField(related_name='levels', to='cakes.cakelevel', verbose_name='Количество уровней торта')),
                ('shape', models.ManyToManyField(related_name='shapes', to='cakes.cakeshape', verbose_name='Форма торта')),
                ('topping', models.ManyToManyField(related_name='toppings', to='cakes.caketopping', verbose_name='Топпинг')),
            ],
            options={
                'verbose_name': 'Торт',
                'verbose_name_plural': 'Торты',
            },
        ),
    ]
